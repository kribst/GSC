# Generated by Django 5.1.4 on 2025-03-24 11:46

import django.db.models.deletion
import django_countries.fields
import tinymce.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Boncomtoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=255, null=True)),
                ('objectif', tinymce.models.HTMLField()),
                ('date', models.DateTimeField(help_text='Entrez la date.', verbose_name='Date')),
                ('objectif_quantite_produit', models.CharField(blank=True, max_length=255, null=True)),
                ('quantite_produit', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Quantite_produit_dans_le_sheet')),
                ('quantite_total_produit', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Quantite_total_produit_dans_le_sheet')),
                ('motif_quantite_produit', models.CharField(blank=True, max_length=255, null=True)),
                ('statut_qte_produit_sheet', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255, null=True)),
                ('objectif_quantite_importer_importer', models.CharField(blank=True, max_length=255, null=True)),
                ('quantite_importer', models.PositiveIntegerField(blank=True, help_text='Entrez_une_quantité_positive.', null=True, verbose_name='Quantite_produit_site')),
                ('quantite_total_importer', models.PositiveIntegerField(blank=True, help_text='Entrez_une_quantité_positive.', null=True, verbose_name='Quantite_total_site')),
                ('motif_quantite_importer_importer', models.CharField(blank=True, max_length=255, null=True)),
                ('statut_qte_importer_importer', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255, null=True)),
                ('objectif_quantite_importer_flyers', models.CharField(blank=True, max_length=255, null=True)),
                ('quantite_flyers', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Quantite_de_flyers ')),
                ('quantite_total_flyers', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Quantite_total_de_flyers')),
                ('motif_quantite_importer_flyers', models.CharField(blank=True, max_length=255, null=True)),
                ('statut_qte_importer_flyers', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255, null=True)),
                ('autre', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comptabilite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('statut', models.CharField(choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255)),
                ('date', models.DateTimeField(help_text='Entrez la date.', verbose_name='Date')),
                ('objectif', tinymce.models.HTMLField()),
                ('description_autre', tinymce.models.HTMLField(blank=True, null=True)),
                ('statut_Facture_etablies', models.CharField(max_length=255)),
                ('quantite_Facture_etablies', models.PositiveIntegerField(blank=True, null=True, verbose_name='Factures établies')),
                ('total_Facture_etablies', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Total Factures établies')),
                ('statut_Devis', models.CharField(max_length=10000)),
                ('quantite_Devis', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Devis')),
                ('total_Devis', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Devis')),
                ('statut_Demande_de_cotation', models.CharField(max_length=10000)),
                ('quantite_Demande_de_cotation', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Demande de cotation par mail')),
                ('total_Demande_de_cotation', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Demande de cotation par mail')),
                ('statut_Livraison_Expedition', models.CharField(max_length=10000)),
                ('quantite_Livraison_Expedition', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Livraison / Expedition')),
                ('total_Livraison_Expedition', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Livraison / Expedition')),
                ('statut_Cheques_recus', models.CharField(max_length=10000)),
                ('quantite_Cheques_recus', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Chèques reçus')),
                ('total_Cheques_recus', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Chèques reçus')),
                ('statut_Depots_cheques', models.CharField(max_length=10000)),
                ('quantite_Depots_cheques', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Dépôts chèques')),
                ('total_Depots_cheques', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Dépôts chèques')),
                ('statut_Bon_de_Commande', models.CharField(max_length=10000)),
                ('quantite_Bon_de_Commande', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Bon de Commande')),
                ('total_Bon_de_Commande', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Bon de Commande')),
                ('statut_Recouvrements_creances', models.CharField(max_length=10000)),
                ('quantite_Recouvrements_creances', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Recouvrements créances')),
                ('total_Recouvrements_creances', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Recouvrements créances')),
                ('statut_Recharge_carte_UBA', models.CharField(max_length=10000)),
                ('quantite_Recharge_carte_UBA', models.CharField(max_length=255)),
                ('total_Recharge_carte_UBA', models.DecimalField(decimal_places=2, max_digits=10)),
                ('statut_Recharge_carte_ACCESS', models.CharField(max_length=10000)),
                ('quantite_Recharge_carte_ACCESS', models.CharField(blank=True, max_length=10000, null=True, verbose_name='Recharge carte ACCESS')),
                ('total_Recharge_carte_ACCESS', models.IntegerField()),
                ('statut_Receptions_mails', models.CharField(max_length=10000)),
                ('quantite_Receptions_mails', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Réceptions mails')),
                ('total_Receptions_mails', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Réceptions mails')),
                ('statut_Mails_envoyes', models.CharField(max_length=10000)),
                ('quantite_Mails_envoyes', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Mails envoyés')),
                ('total_Mails_envoyes', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Mails envoyés')),
                ('statut_Saisir_ecritures_logiciel_Sage', models.CharField(max_length=10000)),
                ('quantite_Saisir_ecritures_logiciel_Sage', models.CharField(max_length=255)),
                ('total_Saisir_ecritures_logiciel_Sage', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total des saisies des écritures dans le logiciel Sage I7.')),
                ('statut_Teledeclaration_impot', models.CharField(max_length=1000000)),
                ('quantite_Teledeclaration_impot', models.CharField(max_length=255)),
                ('total_Teledeclaration_impot', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total de la télé Télédeclarationmpôt')),
                ('statut_Paiement_impot', models.CharField(max_length=10000)),
                ('quantite_Paiement_impot', models.CharField(blank=True, help_text='Entrez une quantité positive.', max_length=10000, null=True, verbose_name='Paiement impôt')),
                ('total_Paiement_impot', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total Paiement impôt')),
                ('statut_Depot_de_facture_en_presentiels', models.CharField(max_length=10000)),
                ('quantite_Depot_de_facture_en_presentiels', models.PositiveIntegerField(blank=True, help_text='Entrez une quantité positive.', null=True, verbose_name='Dépôt de facture en présentiel')),
                ('total_Depot_de_facture_en_presentiels', models.DecimalField(blank=True, decimal_places=2, help_text='Entrez un montant total valide.', max_digits=10, null=True, verbose_name='Total des dépôts de factures en présentiel')),
            ],
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Generaux',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('description', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='Marketing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=255, null=True)),
                ('date', models.DateTimeField(help_text='Entrez la date.', verbose_name='Date')),
                ('autre', tinymce.models.HTMLField(blank=True, null=True)),
                ('indicateur', models.CharField(blank=True, max_length=255, null=True)),
                ('objectifs', models.CharField(blank=True, max_length=255, null=True)),
                ('quantites', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantités')),
                ('Total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('acteur', models.CharField(blank=True, max_length=255, null=True)),
                ('Activites', models.CharField(blank=True, max_length=255, null=True)),
                ('Entreprises', models.CharField(blank=True, max_length=255, null=True)),
                ('Particuliers', models.CharField(blank=True, max_length=255, null=True)),
                ('Services', models.CharField(blank=True, max_length=255, null=True)),
                ('Consommables', models.CharField(blank=True, max_length=255, null=True)),
                ('materiel_informatique', models.CharField(blank=True, max_length=255, null=True)),
                ('formation', models.CharField(blank=True, max_length=255, null=True)),
                ('Statut', models.CharField(blank=True, max_length=255, null=True)),
                ('Difficultes_rencontrees', models.CharField(blank=True, max_length=255, null=True)),
                ('Raisons_e_l_echec_de_l_objectif', models.CharField(blank=True, max_length=255, null=True)),
                ('Actions_correctives', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Marqueting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('date', models.DateTimeField(help_text='Entrez la date.', verbose_name='Date')),
                ('Nombre_de_rendez_vous_objectifs', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_quantite_Objectifs', models.PositiveIntegerField(verbose_name='quantite_Objectifs')),
                ('Nombre_de_rendez_vous_Total_Objectifs', models.PositiveIntegerField(verbose_name='quantite_Objectifs')),
                ('Nombre_de_rendez_vous_acteur', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Activites', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Entreprises', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Particuliers', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Services', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Consommables', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Matériel_informatique', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Formation', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Statut', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Difficultés_rencontrees', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Nombre_de_rendez_vous_Actions_correctives', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_objectifs', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_quantite_Objectifs', models.PositiveIntegerField(verbose_name='quantite_Objectifs_Nombre_de_proposition_commerciale')),
                ('Nombre_de_proposition_commercialele_Total_Objectifs', models.PositiveIntegerField(verbose_name='quantite_Objectifs_Nombre_de_proposition_commerciale')),
                ('Nombre_de_proposition_commercialele_acteur', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Activités', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Entreprises', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Particuliers', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Services', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Consommables', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Materiel_informatique', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Formation', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Statut', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Difficultes_rencontrees', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Nombre_de_proposition_commerciale_Actions_correctives', models.CharField(max_length=255)),
                ('Nombre_de_prospections_objectifs', models.CharField(max_length=255)),
                ('Nombre_de_prospections_quantite_Objectifs', models.PositiveIntegerField(verbose_name='quantite_Objectifs_Nombre_de_prospections')),
                ('Nombre_de_prospectionsle_Total_Objectifs', models.PositiveIntegerField(verbose_name='total_Objectifs_Nombre_de_prospections')),
                ('Nombre_de_prospections_acteur', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Activites', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Entreprises', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Particuliers', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Services', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Consommables', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Materiel_informatique', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Formation', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Statut', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Difficultés_rencontrees', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Nombre_de_prospections_Actions_correctives', models.CharField(max_length=255)),
                ('Relance_objectifs', models.CharField(max_length=255)),
                ('Relance_quantité_Objectifs', models.PositiveIntegerField(verbose_name='quantité_Objectifs_Relance')),
                ('Relancele_Total_Objectifs', models.PositiveIntegerField(blank=True, null=True, verbose_name='total_Objectifs_Relance')),
                ('Relance_acteur', models.CharField(max_length=255)),
                ('Relance_Activités', models.CharField(max_length=255)),
                ('Relance_Entreprises', models.CharField(max_length=255)),
                ('Relance_Particuliers', models.CharField(max_length=255)),
                ('Relance_Services', models.CharField(max_length=255)),
                ('Relance_Consommables', models.CharField(max_length=255)),
                ('Relance_Materiel_informatique', models.CharField(max_length=255)),
                ('Relance_Formation', models.CharField(max_length=255)),
                ('Relance_Statut', models.CharField(max_length=255)),
                ('Relance_Difficultés_rencontrees', models.CharField(max_length=255)),
                ('Relance_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Relance_Actions_correctives', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_objectifs', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_quantité_Objectifs', models.PositiveIntegerField(verbose_name='quantité_Objectifs_Nombre_de_devis_elabores')),
                ('Nombre_de_devis_elaboresle_Total_Objectifs', models.PositiveIntegerField(verbose_name='total_Objectifs_Nombre_de_devis_elabores')),
                ('Nombre_de_devis_elabores_acteur', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Activités', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Entreprises', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Particuliers', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Services', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Consommables', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Materiel_informatique', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Formation', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Statut', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Difficultés_rencontrees', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Nombre_de_devis_elabores_Actions_correctives', models.CharField(max_length=255)),
                ('Devis_en_attente_objectifs', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_quantité_Objectifs', models.PositiveIntegerField(verbose_name='quantité_Objectifs_Devis_en_attente_elabores')),
                ('Devis_en_attente_elaboresle_Total_Objectifs', models.PositiveIntegerField(verbose_name='total_Objectifs_Devis_en_attente_elabores')),
                ('Devis_en_attente_elaboresle_acteur', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Activités', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Entreprises', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Particuliers', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Services', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Consommables', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Matériel_informatique', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Formation', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Statut', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Difficultés_rencontrees', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Raisons_e_l_echec_de_l_objectif', models.CharField(max_length=255)),
                ('Devis_en_attente_elabores_Actions_correctives', models.CharField(max_length=255)),
                ('autre', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('date', models.DateTimeField()),
                ('clients_externe', models.CharField(max_length=255)),
                ('action_externe', models.CharField(max_length=255)),
                ('resultats_externe', models.CharField(max_length=255)),
                ('remarque_externe', models.CharField(max_length=255)),
                ('statuts_externe', models.CharField(max_length=255)),
                ('paiement_externe', models.CharField(max_length=255)),
                ('nombres_interventions_externe', models.PositiveIntegerField(verbose_name='nombres_interventions_externe')),
                ('Intervention_en_attente_externe', models.PositiveIntegerField(verbose_name='Intervention_en_attente_externe')),
                ('Facturation_Paiement_externe', models.PositiveIntegerField(blank=True, null=True, verbose_name='Facturation_Paiement')),
                ('clients_interne', models.CharField(max_length=255)),
                ('action_interne', models.CharField(max_length=255)),
                ('resultats_interne', models.CharField(max_length=255)),
                ('remarque_interne', models.CharField(max_length=255)),
                ('statuts_interne', models.CharField(max_length=255)),
                ('paiement_interne', models.CharField(max_length=255)),
                ('Laptops_Entree', models.PositiveIntegerField(verbose_name='Laptops_Entrées')),
                ('Laptop_en_Attente', models.PositiveIntegerField(verbose_name='Laptop_en_Attente')),
                ('Facturation_Paiement', models.PositiveIntegerField(verbose_name='Facturation_Paiement')),
                ('autre', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('poste', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('genre', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=8, null=True)),
                ('pays', django_countries.fields.CountryField(blank=True, max_length=2)),
                ('telephone', models.CharField(blank=True, max_length=20, null=True)),
                ('departement', models.CharField(blank=True, choices=[('BON_COMPTOIR', 'Bon Comptoir'), ('MARKETING', 'Marketing'), ('SERVICE_GENERAUX', 'Service Généraux'), ('TECHNIQUE', 'Technique'), ('SOFT', 'Soft'), ('COMPTABLE', 'Comptable')], max_length=50, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images')),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='RapportIndividuel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('rapport', models.CharField(blank=True, choices=[('JOURNALIER', 'JOURNALIER'), ('HEBDOMADAIRE', 'HEBDOMADAIRE'), ("D'ACTIVITE", "D'ACTIVITE")], max_length=255, null=True)),
                ('statut', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué')], max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Performance.departement')),
                ('auteur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auteur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubMarketing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicateur', models.CharField(blank=True, max_length=255, null=True)),
                ('objectifs', models.CharField(blank=True, max_length=255, null=True)),
                ('quantites', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantités')),
                ('Total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('acteur', models.CharField(blank=True, max_length=255, null=True)),
                ('Activites', models.CharField(blank=True, max_length=255, null=True)),
                ('Entreprises', models.CharField(blank=True, max_length=255, null=True)),
                ('Particuliers', models.CharField(blank=True, max_length=255, null=True)),
                ('Services', models.CharField(blank=True, max_length=255, null=True)),
                ('Consommables', models.CharField(blank=True, max_length=255, null=True)),
                ('materiel_informatique', models.CharField(blank=True, max_length=255, null=True)),
                ('formation', models.CharField(blank=True, max_length=255, null=True)),
                ('Statut', models.CharField(blank=True, max_length=255, null=True)),
                ('Difficultes_rencontrees', models.CharField(blank=True, max_length=255, null=True)),
                ('Raisons_e_l_echec_de_l_objectif', models.CharField(blank=True, max_length=255, null=True)),
                ('Actions_correctives', models.CharField(blank=True, max_length=255, null=True)),
                ('marketing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Performance.marketing')),
            ],
        ),
        migrations.CreateModel(
            name='TitreDescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=255)),
                ('sous_titre', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('rapport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='titres_descriptions', to='Performance.rapportindividuel')),
            ],
        ),
        migrations.CreateModel(
            name='Variant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('autre_un', models.CharField(blank=True, max_length=255, null=True)),
                ('objectifs', models.CharField(blank=True, max_length=255, null=True)),
                ('quantites', models.PositiveIntegerField(blank=True, null=True, verbose_name='quantités')),
                ('Total', models.PositiveIntegerField(blank=True, null=True, verbose_name='total')),
                ('acteur', models.CharField(blank=True, max_length=255, null=True)),
                ('Activites', models.CharField(blank=True, max_length=255, null=True)),
                ('Entreprises', models.CharField(blank=True, max_length=255, null=True)),
                ('Particuliers', models.CharField(blank=True, max_length=255, null=True)),
                ('Services', models.CharField(blank=True, max_length=255, null=True)),
                ('Consommables', models.CharField(blank=True, max_length=255, null=True)),
                ('materiel_informatique', models.CharField(blank=True, max_length=255, null=True)),
                ('formation', models.CharField(blank=True, max_length=255, null=True)),
                ('Statut', models.CharField(blank=True, max_length=255, null=True)),
                ('Difficultes_rencontrees', models.CharField(blank=True, max_length=255, null=True)),
                ('Raisons_e_l_echec_de_l_objectif', models.CharField(blank=True, max_length=255, null=True)),
                ('Actions_correctives', models.CharField(blank=True, max_length=255, null=True)),
                ('Marqueting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Performance.marqueting')),
            ],
        ),
        migrations.CreateModel(
            name='Technique_int',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('int_clients', models.CharField(max_length=255)),
                ('int_action', models.CharField(max_length=255)),
                ('int_resultats', models.CharField(max_length=255)),
                ('int_remarque', models.CharField(max_length=255)),
                ('int_statuts', models.CharField(max_length=255)),
                ('int_paiement', models.CharField(max_length=255)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activites_internes', to='Performance.technique')),
                ('int_intervenant', models.ManyToManyField(related_name='techniques_internes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Technique_ext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ext_clients', models.CharField(max_length=255)),
                ('ext_action', models.CharField(max_length=255)),
                ('ext_resultats', models.CharField(max_length=255)),
                ('ext_remarque', models.CharField(max_length=255)),
                ('ext_statuts', models.CharField(max_length=255)),
                ('ext_paiement', models.CharField(max_length=255)),
                ('technique', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activites_externes', to='Performance.technique')),
                ('ext_intervenant', models.ManyToManyField(related_name='techniques_externes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='technique',
            name='intervenant_externe',
            field=models.ManyToManyField(related_name='intervenant', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='technique',
            name='intervenant_interne',
            field=models.ManyToManyField(related_name='intervenants', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SubComptoir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objectif', models.CharField(blank=True, max_length=255, null=True)),
                ('activite', models.CharField(blank=True, max_length=255, null=True, verbose_name='Activité')),
                ('quantite', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantité')),
                ('quantite_total', models.PositiveIntegerField(blank=True, null=True, verbose_name='Quantité_total')),
                ('motif', models.CharField(blank=True, max_length=255, null=True)),
                ('statut', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255, null=True)),
                ('boncomptoir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Performance.boncomtoir')),
                ('Nombre_de_personne', models.ManyToManyField(blank=True, null=True, related_name='subcomptoir_nombre_de_personne', to=settings.AUTH_USER_MODEL)),
                ('personne_en_charge', models.ManyToManyField(blank=True, null=True, related_name='subcomptoir_personne_en_charge', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RapportEquippe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=255, null=True)),
                ('objectif', tinymce.models.HTMLField()),
                ('statut', models.CharField(blank=True, choices=[('Terminé', 'Terminé'), ('En Cours', 'En Cours'), ('En Pause', 'En Pause'), ('Risqué', 'Risqué'), ('Planifié', 'Planifié')], max_length=255, null=True)),
                ('date', models.DateTimeField()),
                ('description', tinymce.models.HTMLField()),
                ('departement', models.ManyToManyField(related_name='rapport_departement', to='Performance.departement')),
                ('chef', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chef_project', to=settings.AUTH_USER_MODEL)),
                ('superviseur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rapports_superviseur', to=settings.AUTH_USER_MODEL)),
                ('travailleur', models.ManyToManyField(related_name='rapports_travailleur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='departement',
            name='chef',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='departement_chef', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='departement',
            name='utilisateur',
            field=models.ManyToManyField(related_name='departements', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='Nombre_presonne_flyers',
            field=models.ManyToManyField(related_name='Nombre_presonne_flyers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='Nombre_presonne_importer',
            field=models.ManyToManyField(related_name='Nombre_presonne_importer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='nombre_personne',
            field=models.ManyToManyField(related_name='personne_en_charge_pour_le_sheet', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='personne_en_charge_flyers',
            field=models.ManyToManyField(related_name='personne_en_charge_pour_flyers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='personne_en_charge_importer',
            field=models.ManyToManyField(related_name='personne_en_charge_pour_importer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boncomtoir',
            name='personne_en_charge_le_sheet',
            field=models.ManyToManyField(related_name='Nombre_presonne_pour_le_sheet', to=settings.AUTH_USER_MODEL),
        ),
    ]
